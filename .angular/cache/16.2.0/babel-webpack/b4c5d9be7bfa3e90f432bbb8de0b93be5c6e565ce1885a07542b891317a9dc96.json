{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SvgMapComponent = class SvgMapComponent {\n  constructor(countryApiService) {\n    this.countryApiService = countryApiService;\n  }\n  onCountryClick(event) {\n    const clickedElement = event.target;\n    if (clickedElement.tagName === 'path') {\n      const countryName = clickedElement.id;\n      console.log('Country clicked:', countryName);\n      // Fetch country data from the API based on countryName\n      this.countryApiService.getCountryData(countryName).subscribe(response => {\n        const countryData = response.body[0]; // Assuming API returns an array of data\n        console.log('Country data:', countryData);\n        document.getElementById('selectedCountry').innerText = `Selected Country: ${countryName}`;\n        document.getElementById('countryCapital').innerText = `Capital: ${countryData.capital}`;\n        document.getElementById('countryRegion').innerText = `Region: ${countryData.region}`;\n        document.getElementById('incomeLevel').innerText = `Income Level: ${countryData.incomeLevel}`;\n        document.getElementById('additionalProperty1').innerText = `Additional Property 1: ${countryData.additionalProperty1}`;\n        document.getElementById('additionalProperty2').innerText = `Additional Property 2: ${countryData.additionalProperty2}`;\n      }, error => {\n        console.error('Error fetching country data:', error);\n      });\n    }\n  }\n};\nSvgMapComponent = __decorate([Component({\n  selector: 'app-svg-map',\n  templateUrl: './svg-map.component.html',\n  styleUrls: ['./svg-map.component.css']\n})], SvgMapComponent);","map":{"version":3,"names":["Component","SvgMapComponent","constructor","countryApiService","onCountryClick","event","clickedElement","target","tagName","countryName","id","console","log","getCountryData","subscribe","response","countryData","body","document","getElementById","innerText","capital","region","incomeLevel","additionalProperty1","additionalProperty2","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Caleb\\Desktop\\App\\country-app\\src\\app\\svg-map\\svg-map.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CountryApiService } from '../path-to-country-api-service'; // Adjust import path\nimport { HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-svg-map',\n  templateUrl: './svg-map.component.html',\n  styleUrls: ['./svg-map.component.css'],\n})\nexport class SvgMapComponent {\n  constructor(private countryApiService: CountryApiService) {}\n\n  onCountryClick(event: MouseEvent): void {\n    const clickedElement = event.target as HTMLElement;\n    if (clickedElement.tagName === 'path') {\n      const countryName = clickedElement.id;\n      console.log('Country clicked:', countryName);\n\n      // Fetch country data from the API based on countryName\n      this.countryApiService.getCountryData(countryName).subscribe(\n        (response: HttpResponse<any>) => {\n          const countryData = response.body[0]; // Assuming API returns an array of data\n          console.log('Country data:', countryData);\n          \n          document.getElementById('selectedCountry').innerText = `Selected Country: ${countryName}`;\n          document.getElementById('countryCapital').innerText = `Capital: ${countryData.capital}`;\n          document.getElementById('countryRegion').innerText = `Region: ${countryData.region}`;\n          document.getElementById('incomeLevel').innerText = `Income Level: ${countryData.incomeLevel}`;\n          document.getElementById('additionalProperty1').innerText = `Additional Property 1: ${countryData.additionalProperty1}`;\n          document.getElementById('additionalProperty2').innerText = `Additional Property 2: ${countryData.additionalProperty2}`;\n        },\n        (error) => {\n          console.error('Error fetching country data:', error);\n        }\n      );\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAC1BC,YAAoBC,iBAAoC;IAApC,KAAAA,iBAAiB,GAAjBA,iBAAiB;EAAsB;EAE3DC,cAAcA,CAACC,KAAiB;IAC9B,MAAMC,cAAc,GAAGD,KAAK,CAACE,MAAqB;IAClD,IAAID,cAAc,CAACE,OAAO,KAAK,MAAM,EAAE;MACrC,MAAMC,WAAW,GAAGH,cAAc,CAACI,EAAE;MACrCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,WAAW,CAAC;MAE5C;MACA,IAAI,CAACN,iBAAiB,CAACU,cAAc,CAACJ,WAAW,CAAC,CAACK,SAAS,CACzDC,QAA2B,IAAI;QAC9B,MAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACtCN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEI,WAAW,CAAC;QAEzCE,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,SAAS,GAAG,qBAAqBX,WAAW,EAAE;QACzFS,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,SAAS,GAAG,YAAYJ,WAAW,CAACK,OAAO,EAAE;QACvFH,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACC,SAAS,GAAG,WAAWJ,WAAW,CAACM,MAAM,EAAE;QACpFJ,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,SAAS,GAAG,iBAAiBJ,WAAW,CAACO,WAAW,EAAE;QAC7FL,QAAQ,CAACC,cAAc,CAAC,qBAAqB,CAAC,CAACC,SAAS,GAAG,0BAA0BJ,WAAW,CAACQ,mBAAmB,EAAE;QACtHN,QAAQ,CAACC,cAAc,CAAC,qBAAqB,CAAC,CAACC,SAAS,GAAG,0BAA0BJ,WAAW,CAACS,mBAAmB,EAAE;MACxH,CAAC,EACAC,KAAK,IAAI;QACRf,OAAO,CAACe,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,CACF;;EAEL;CACD;AA5BYzB,eAAe,GAAA0B,UAAA,EAL3B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACW7B,eAAe,CA4B3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}